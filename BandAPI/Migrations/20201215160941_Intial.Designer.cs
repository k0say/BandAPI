// <auto-generated />
using System;
using BandAPI.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BandAPI.Migrations
{
    [DbContext(typeof(BandAlbumContext))]
    [Migration("20201215160941_Intial")]
    partial class Intial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BandAPI.Entities.Album", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(400)")
                        .HasMaxLength(400);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("BandId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ade75b2b-78f9-4039-b07f-ee7dfb98d52d"),
                            BandId = new Guid("a695c383-f13c-4013-3d54-724bf36283f4"),
                            Description = "Awesome debut album AHAHHSHD",
                            Title = "Burton Chambers"
                        },
                        new
                        {
                            Id = new Guid("d03563f8-9009-409e-98dc-2b68394353bc"),
                            BandId = new Guid("a695c383-f13c-4013-3d54-724bf36283f4"),
                            Description = "Awesome debut album AHAHHSHD",
                            Title = "Burton Chambers"
                        },
                        new
                        {
                            Id = new Guid("5ce28d03-3254-4fdb-bbd7-414825b99fe4"),
                            BandId = new Guid("a695c383-f13c-4013-3d54-724bf36283f4"),
                            Description = "Awesome debut album AHAHHSHD",
                            Title = "Burton Chambers"
                        },
                        new
                        {
                            Id = new Guid("71d4dcec-b4fe-4600-92ed-cc8fa6145645"),
                            BandId = new Guid("a695c383-f13c-4013-3d54-724bf36283f4"),
                            Description = "Awesome debut album AHAHHSHD",
                            Title = "Burton Chambers"
                        },
                        new
                        {
                            Id = new Guid("ad706a51-acb1-006e-26a3-6345f47a66df"),
                            BandId = new Guid("a695c383-f13c-4013-3d54-724bf36283f4"),
                            Description = "Awesome debut album AHAHHSHD",
                            Title = "Burton Chambers"
                        },
                        new
                        {
                            Id = new Guid("05b623b5-5b97-49d3-9808-5ee0af52c4aa"),
                            BandId = new Guid("a695c383-f13c-4013-3d54-724bf36283f4"),
                            Description = "Awesome debut album AHAHHSHD",
                            Title = "Burton Chambers"
                        });
                });

            modelBuilder.Entity("BandAPI.Entities.Band", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Founded")
                        .HasColumnType("datetime2");

                    b.Property<string>("MainGenre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Bands");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0f3e64f2-0bd4-9431-6024-8abd724f5377"),
                            Founded = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MainGenre = "Farley, Aspen V.",
                            Name = "Hunter Rivera"
                        },
                        new
                        {
                            Id = new Guid("f5e1191d-b972-b37d-64b2-6e93d27da92e"),
                            Founded = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MainGenre = "Huff, Darius M.",
                            Name = "Burton Chambers"
                        },
                        new
                        {
                            Id = new Guid("22c52ad2-ae11-036f-5d51-83369aa777bb"),
                            Founded = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MainGenre = "Whitney, Jena O.",
                            Name = "Talon Bailey"
                        },
                        new
                        {
                            Id = new Guid("0e66ea98-0bc8-214f-f2b4-4a36a4d5329f"),
                            Founded = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MainGenre = "Daniels, Melvin Y.",
                            Name = "Gage Gross"
                        },
                        new
                        {
                            Id = new Guid("9f5d793b-1eb9-baca-281c-50af5e5ce583"),
                            Founded = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MainGenre = "Huber, Addison M.",
                            Name = "Lars Patel"
                        },
                        new
                        {
                            Id = new Guid("ad706a51-acb1-006e-26a3-6345f47a66df"),
                            Founded = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MainGenre = "Russo, Cruz Q.",
                            Name = "Ethan Bryan"
                        },
                        new
                        {
                            Id = new Guid("b5b8c87f-ec11-2f49-c9ed-6a916f7da923"),
                            Founded = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MainGenre = "Elliott, Harrison R.",
                            Name = "Cole Pickett"
                        },
                        new
                        {
                            Id = new Guid("7697d932-e00d-f9e5-ecc0-013e68259504"),
                            Founded = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MainGenre = "Cleveland, Rooney F.",
                            Name = "Abdul Mclean"
                        },
                        new
                        {
                            Id = new Guid("a695c383-f13c-4013-3d54-724bf36283f4"),
                            Founded = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MainGenre = "Bridges, Mark D.",
                            Name = "Fletcher England"
                        });
                });

            modelBuilder.Entity("BandAPI.Entities.Album", b =>
                {
                    b.HasOne("BandAPI.Entities.Band", "Band")
                        .WithMany("Albums")
                        .HasForeignKey("BandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
